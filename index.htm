<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Colour test</title>
    <script defer src="/__/firebase/4.6.1/firebase-app.js"></script>
    <script defer src="/__/firebase/4.6.1/firebase-auth.js"></script>
    <script defer src="/__/firebase/4.6.1/firebase-database.js"></script>
    <script defer src="/__/firebase/4.6.1/firebase-messaging.js"></script>
    <script defer src="/__/firebase/4.6.1/firebase-storage.js"></script>
    <script defer src="/__/firebase/init.js"></script>
    <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>
  </head>
  <body>
    <script type="text/javascript" src="jquery.rotate-1.0.1.min.js"></script>
    <script type="text/javascript" src="jquery.pointat.min.js"></script>
    <style type="text/css">
    body, textarea {
      background-color:#fffcfc
    }
    textarea {
      top:0;
      width:100%;
      left:0;
      text-align: right;
      border:none;
      position: absolute;
      height:10em;
    }
    body {
      overflow:hidden;
    }
    #container {
      width: 300px;
      height: 500px;
      -webkit-animation-name: spin;
      -webkit-animation-duration: 400000ms;
      -webkit-animation-iteration-count: infinite;
      -webkit-animation-timing-function: linear;
      -moz-animation-name: spin;
      -moz-animation-duration: 400000ms;
      -moz-animation-iteration-count: infinite;
      -moz-animation-timing-function: linear;
      -ms-animation-name: spin;
      -ms-animation-duration: 400000ms;
      -ms-animation-iteration-count: infinite;
      -ms-animation-timing-function: linear;
      animation-name: spin;
      animation-duration: 40000ms;
      animation-iteration-count: infinite;
      animation-timing-function: linear;
    }
    @-ms-keyframes spin {
      from {
        -ms-transform: rotate(0deg);
      }
      to {
        -ms-transform: rotate(0deg);
      }
    }
    @-moz-keyframes spin {
      from {
        -moz-transform: rotate(0deg);
      }
      to {
        -moz-transform: rotate(0deg);
      }
    }
    @-webkit-keyframes spin {
      from {
        -webkit-transform: rotate(0deg);
      }
      to {
        -webkit-transform: rotate(0deg);
      }
    }
    @keyframes spin {
      from {
        transform:rotate(0deg);
      }
      to {
        transform:rotate(0deg);
      }
    }
    .field {
      position: absolute;
      border-radius: 35px;
      width: 70px;
      height: 70px;
      line-height: 70px;
      text-align: center;
    }
    body {
      padding: 2em;
    }
    #center {
      width: 10px;
      height: 10px;
      position: absolute;
      left: 295px;
      top: 295px;
      background: #000;
    }
    .field {
      position: absolute;
    }
    .c0 {
      background: #757575;
    }
    .c1 {
      background: #000066;
    }
    .c2 {
      background: #00DBDB;
    }
    .c3 {
      background: #fc0000;
    }
    .c4 {
      background: #ffff00;
    }
    .c5 {
      background: #7f007f;
    }
    .c6 {
      background: #962517;
    }
    .c7 {
      background: #000000;
    }
    .c8 {
      background: #006161;
    }
    .c9 {
      background: #ff7f7f;
    }
    .ci {
      background: #0000ff;
    }
    .cS {
      background: #e3008c;
    }
    .cE {
      background: #ff7f00;
    }
    .cG {
      background: #9dff00;
    }
    .cY {
      background: #666600;
    }
    .moveAni {
      transition: left 400ms ease-out, top 400ms ease-out;
    }
    .moveAni {
      transition: left 400ms ease-out, top 400ms ease-out;
    }
  </style>
  <script type="text/javascript">

    //<![CDATA[
        $(function(){
          colour_array = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "i", "S", "E", "G", "Y"];

          shuffle(colour_array);

function createFields() {
    $('.field').remove();
    var container = $('#container');
    for (var i = 0; i < +15; i++) {
        $('<div/>', {
            'class': 'field c' + colour_array[i],
        })
            .click(function () {
            $('textarea').val($('textarea').val() + $(this).attr('class').replace('field c', ''));
            $(this).remove();
            distributeFields();
            if ($('.field').length == 1) {
                $('textarea').val($('textarea').val() + $('.field').attr('class').replace('field c', '') + '\n');
                shuffle(colour_array);
                createFields();
                distributeFields();
            }
        }).appendTo(container);
    }
}

function distributeFields() {
    var radius = 200;
    var fields = $('.field'),
        container = $('#container'),
        width = container.width(),
        height = container.height(),
        angle = 0,
        step = (2 * Math.PI) / fields.length;
    fields.each(function () {
        var x = Math.round(width / 2 + radius * Math.cos(angle) - $(this).width() / 2);
        var y = Math.round(height / 2 + radius * Math.sin(angle) - $(this).height() / 2);
        if (window.console) {
            console.log($(this).text(), x, y);
        }
        $(this).css({
            left: x + 'px',
            top: y + 'px',
            height: (220 - (fields.length * 10)) + 'px',
            width: (220 - (fields.length * 10)) + 'px',
            borderRadius: (220 - (fields.length * 10)) / 2 + 'px',
        });
        angle += step;
    });
}

createFields();
distributeFields();

var $container = $("div.container");

function shuffle(array) {
    var m = array.length,
        t, i;

    // While there remain elements to shuffle…
    while (m) {

        // Pick a remaining element…
        i = Math.floor(Math.random() * m--);

        // And swap it with the current element.
        t = array[m];
        array[m] = array[i];
        array[i] = t;
    }

    return array;
   }
  });
    //]]>

  </script>
  <textarea type="text" value="" ></textarea>
    <center>
      <div id="container"></div>
    </center>   
  </body>
</html>
